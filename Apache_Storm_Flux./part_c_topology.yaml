# topology definition
# name to be used when submitting
name: "part-C"

# topology configuration
# this will be passed to the submitter as a map of config options
config:
    storm.local.hostname: "localhost"
    topology.max.task.parallelism: 3
    # set this to true if you want to see more debug log
    # set it to false before submitting
    topology.debug: false
    datafile: "/tmp/data.txt"

components:
  - id: "poolConfig"
    className: "org.apache.storm.redis.common.config.JedisPoolConfig"
    constructorArgs:
      - "localhost"
      - 6379
      - 2000
      - "uiuc_cs498_mp7"
      - 0

  - id: "storeMapper"
    className: "edu.illinois.storm.WordCountStoreMapper"
    constructorArgs:
      - "partCWordCount"

# spout definitions
spouts:
  - id: "file-spout"
    className: "org.apache.storm.flux.wrappers.spouts.FluxShellSpout"
    constructorArgs:
      # Command line
      - ["python", "file_reader_spout.py"]
      # Output field(s)
      - ["sentence"]
    # parallelism hint
    parallelism: 1

# bolt definitions
bolts:
    # multilang/resources/normalizer_bolt.py
  - id: "splitter-bolt"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
      # Command line
      - ["python", "split_sentence_bolt.py"]
      # Output field(s)
      - ["word"]
    parallelism: 1

  - id: "normalizer-bolt"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
      # Command line
      - ["python", "normalizer_bolt.py"]
      # Output field(s)
      - ["word"]
    parallelism: 1

  - id: "counter-bolt"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
      # Command line
      - ["python", "word_count_bolt.py"]
      # Output field(s)
      - ["word","count"]
    parallelism: 1

- id: "redis-store-bolt"
    className: "org.apache.storm.redis.bolt.RedisStoreBolt"
    constructorArgs:
      - ref: "poolConfig"
      - ref: "storeMapper"
    parallelism: 1


# stream definitions
streams:
  - name: "Spout to Splitter" # name isn't used (placeholder for logging, UI, etc.)
    # The stream emitter
    from: "file-spout"
    # The stream consumer
    to: "splitter-bolt"
    # Grouping type
    grouping:
      type: SHUFFLE

  # pipe output of split bolt to word count bolt
  # Hint: choose the right grouping type to make problem easier
  - name: "Splitter to Normalizer"
    from: "splitter-bolt"
    to: "normalizer-bolt"
    grouping:
      type: SHUFFLE

  - name: "Normalizer to Counter"
    from: "normalizer-bolt"
    to: "counter-bolt"
    grouping:
      type: FIELDS
      # field(s) to group on
      args: ["word"]

  # pipe output of word count bolt to redis store bolt
  - name: "Counter to Redis"
    from: "counter-bolt"
    to: "redis-store-bolt"
    grouping:
      type: SHUFFLE