# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# topology definition
# name to be used when submitting
name: "part-A"

# topology configuration
# this will be passed to the submitter as a map of config options
config:
    storm.local.hostname: "localhost"
    topology.max.task.parallelism: 3
    # set this to true if you want to see more debug log
    # set it to false before submitting
    topology.debug: false
    # set input file path here
    datafile: "/tmp/data.txt"

components:
  - id: "poolConfig"
    className: "org.apache.storm.redis.common.config.JedisPoolConfig"
    constructorArgs:
      - "localhost"
      - 6379
      - 2000
      - "uiuc_cs498_mp7"
      - 0

  # implement the redis store mapper
  # src/main/java/edu/illinois/storm/WordCountStoreMapper.java
  # className: "edu.illinois.storm.WordCountStoreMapper"
  # redis hash key for part A is "partAWordCount"
  - id: "storeMapper"
    className: "edu.illinois.storm.WordCountStoreMapper"
    constructorArgs:
      - "partAWordCount"


  # spout definitions
spouts:
  # implement the random sentence spout
  # multilang/resources/random_sentence_spout.py
  # Hint: you need to define output field(s) here when using FluxShellSpout
  - id: "sentence-spout"
    className: "org.apache.storm.flux.wrappers.spouts.FluxShellSpout"
    constructorArgs:
      # Command line
      - ["python", "random_sentence_spout.py"]
      # Output field(s)
      - ["sentence"]
    # parallelism hint
    parallelism: 1

# bolt definitions
bolts:
  # implement the split sentences bolt
  # multilang/resources/split_sentence_bolt.py
  - id: "splitter-bolt"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
      # Command line
      - ["python", "split_sentence_bolt.py"]
      # Output field(s)
      - ["word"]
    parallelism: 1
  
  # implement the word count bolt
  # multilang/resources/word_count_bolt.py
  - id: "counter-bolt"
    className: "org.apache.storm.flux.wrappers.bolts.FluxShellBolt"
    constructorArgs:
      # Command line
      - ["python", "word_count_bolt.py"]
      # Output field(s)
      - ["word","count"]
    parallelism: 1

  # initialize RedisStoreBolt using poolConfig and storeMapper
  # ClassName is "org.apache.storm.redis.bolt.RedisStoreBolt"
  - id: "redis-store-bolt"
    className: "org.apache.storm.redis.bolt.RedisStoreBolt"
    constructorArgs:
      - ref: "poolConfig"
      - ref: "storeMapper"
    parallelism: 1


# stream definitions
# stream definitions define connections between spouts and bolts.
streams:
  # pipe output of sentences generating spout to split bolt
  - name: "Spout to Splitter" # name isn't used (placeholder for logging, UI, etc.)
    # The stream emitter
    from: "sentence-spout"
    # The stream consumer
    to: "splitter-bolt"
    # Grouping type
    grouping:
      type: SHUFFLE

  # pipe output of split bolt to word count bolt
  # Hint: choose the right grouping type to make problem easier
  - name: "Splitter to Counter"
    from: "splitter-bolt"
    to: "counter-bolt"
    grouping:
      type: FIELDS
      # field(s) to group on
      args: ["word"]

  # pipe output of word count bolt to redis store bolt
  - name: "Counter to Redis"
    from: "counter-bolt"
    to: "redis-store-bolt"
    grouping:
      type: SHUFFLE